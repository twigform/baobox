name: Build and Release BaoBox
on:
  push:
    tags:
      - 'v*'  # Trigger on version tags
    branches: [ "main" ]
    paths:
      - 'baobox/**'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'baobox/**'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest, macos-latest, ubuntu-latest]

    runs-on: ${{ matrix.platform }}
    defaults:
      run:
        working-directory: ./baobox

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: './baobox/package-lock.json'

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
        working-directory: .

      - name: Install frontend dependencies
        run: npm install

      - name: Run type check
        run: npm run check      - name: Build frontend
        run: npm run build

      - name: Build Tauri app
        run: npm run tauri build

      - name: Prepare artifacts for Release
        id: prepare_artifacts
        shell: pwsh
        run: |
          $artifacts = if ($env:RUNNER_OS -eq "Windows") {
            "src-tauri/target/release/bundle/msi/*.msi"
          } elseif ($env:RUNNER_OS -eq "macOS") {
            "src-tauri/target/release/bundle/dmg/*.dmg"
          } else {
            "src-tauri/target/release/bundle/deb/*.deb"
          }
          echo "artifact_path=$artifacts" >> $env:GITHUB_OUTPUT

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: baobox-${{ matrix.platform }}
          path: baobox/${{ steps.prepare_artifacts.outputs.artifact_path }}
          if-no-files-found: error

  create-release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          prerelease: false
          files: artifacts/**/*
          generate_release_notes: true
          token: ${{ secrets.GITHUB_TOKEN }}
